<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taiji.admin.mapper.SOrgMapper">
  <resultMap id="BaseResultMap" type="com.taiji.admin.model.SOrg">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="p_code" jdbcType="VARCHAR" property="pCode" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="del_flg" jdbcType="CHAR" property="delFlg" />
    <result column="is_parent" jdbcType="CHAR" property="isParent" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <collection property="parent" column="p_code" ofType="com.taiji.admin.model.SOrg"  
        select="com.taiji.admin.mapper.SOrgMapper.selectByCode">  
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, pid, code, p_code, sort, del_flg, create_by, create_date, update_by, update_date, remark
  </sql>
  <select id="selectByExample" parameterType="com.taiji.admin.model.SOrgExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_org
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="from != null and size != null">
   		limit #{from,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_org
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_org
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from s_org
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="subOrgs" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    	<include refid="Base_Column_List" />
    from 
        s_org u
	where u.del_flg = 0
	and u.id != 0
	order by u.sort, u.id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from s_org
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCode" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from s_org
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.taiji.admin.model.SOrgExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from s_org
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taiji.admin.model.SOrg">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_org (id, name, pid, code, p_code, 
      sort, del_flg, create_by, 
      create_date, update_by, update_date, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{pCode,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{delFlg,jdbcType=CHAR}, #{createBy,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.taiji.admin.model.SOrg">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into s_org
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="pCode != null">
        p_code,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="delFlg != null">
        del_flg,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="pCode != null">
        #{pCode,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="delFlg != null">
        #{delFlg,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taiji.admin.model.SOrgExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from s_org
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_org
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        id = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.pCode != null">
        p_code = #{record.pCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.delFlg != null">
        del_flg = #{record.delFlg,jdbcType=CHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_org
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      p_code = #{record.pCode,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      del_flg = #{record.delFlg,jdbcType=CHAR},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taiji.admin.model.SOrg">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_org
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="pCode != null">
        p_code = #{pCode,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="delFlg != null">
        del_flg = #{delFlg,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taiji.admin.model.SOrg">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update s_org
    set name = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      p_code = #{pCode,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      del_flg = #{delFlg,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据code查询全部子类 -->
  <select id="queryOrgsByName" parameterType="java.lang.String" resultType="java.lang.String">
	select group_concat(id) from s_org where name like concat('%',#{name,jdbcType=VARCHAR},'%');
  </select>
  
  <!-- 根据code查询全部子类 -->
  <select id="orgChildren" parameterType="java.lang.String" resultType="java.lang.String">
	SELECT org_children(#{p}) FROM dual
  </select>
  
  <!-- 根据code查询全部父类 -->
  <select id="orgParents" parameterType="java.lang.String" resultType="java.lang.String">
	SELECT org_parents(#{p}) FROM dual
  </select>
  
  <!-- 根据code查询最高级父类 -->
  <select id="orgParent" parameterType="java.lang.String" resultType="java.lang.String">
	SELECT org_parent(#{p}) FROM dual
  </select>
  
  <select id="nextLevel" parameterType="java.lang.String" resultType="java.util.Map">
	<!-- select * from 
		(select id,name,pid, true as nocheck, true as isParent, '' as phone, sort,0 as od from s_org where del_flg=0 and pid=#{id,jdbcType=INTEGER}
			union
		select id,name,org_id as pid, false as nocheck, false as isParent, sale_phone as phone,sort,1 as od from t_addr_book where  del_flg=0 and org_id=#{id,jdbcType=INTEGER}) uu 
	order by uu.od, uu.sort -->
	
	<!-- select * from 
		(select concat('o_',id) as id,name,concat('o_',pid) as pid, false as nocheck, true as isParent, '' as phone, sort,0 as od 
				from s_org where del_flg=0 and pid=#{id,jdbcType=INTEGER}
			union
		select concat('u_',id) as id,name,concat('o_',org_id) as pid, false as nocheck, false as isParent, sale_phone as phone,sort,1 as od 
				from t_addr_book where  del_flg=0 and org_id=#{id,jdbcType=INTEGER}
	) uu 
		order by uu.od, uu.sort -->
		
	<!-- all -->
	<!-- select u1.id,u1.name,u1.pid,false as halfCheck,'' as phone from 
	(select concat('o_',o.id) as id,o.`name` as name,concat('o_',o.pid) as pid from s_org o order by o.sort) u1
	union
	select u2.id,u2.name,u2.pid,false as halfCheck,u2.phone from 
	(select concat('u_',t.user_id) as id,t.name,concat('o_',t.org_id) as pid,t.sale_phone as phone 
		from s_org o,t_addr_book t where o.id=t.org_id order by o.sort,t.sort) u2 -->
	
	<!-- all v1 org only -->
	<!-- select u1.id,u1.name,u1.pid,false as halfCheck,'' as phone from 
	(select concat('o_',o.id) as id,o.`name` as name,concat('o_',o.pid) as pid from s_org o 
		<if test="_parameter != null">
			where o.name like concat('%',#{name,jdbcType=VARCHAR},'%')
		</if>
		order by o.sort) u1
	union
	select u2.id,u2.name,u2.pid,false as halfCheck,u2.phone from 
	(select concat('u_',t.user_id) as id,t.name,concat('o_',t.org_id) as pid,t.sale_phone as phone 
		from s_org o,t_addr_book t where o.id=t.org_id 
			<if test="_parameter != null">
				and o.name like concat('%',#{name,jdbcType=VARCHAR},'%')
			</if>
			order by o.sort,t.sort) u2 -->
	
	<!-- all v2 org, user -->
	select u1.id,u1.name,u1.pid,false as halfCheck,'' as phone from 
	(select concat('o_',o.id) as id,o.`name` as name,concat('o_',o.pid) as pid 
		from s_org o left join t_addr_book t on o.id=t.org_id where 1=1
			<if test="_parameter != null">
				and (o.name like concat('%',#{name,jdbcType=VARCHAR},'%')
					or t.name like concat('%',#{name,jdbcType=VARCHAR},'%'))
			</if>
		order by o.sort) u1
	union
	select u2.id,u2.name,u2.pid,false as halfCheck,u2.phone from 
	(select concat('u_',t.user_id) as id,t.name,concat('o_',t.org_id) as pid,t.sale_phone as phone 
		from s_org o,t_addr_book t where o.id=t.org_id 
			<if test="_parameter != null">
				and (o.name like concat('%',#{name,jdbcType=VARCHAR},'%')
					or t.name like concat('%',#{name,jdbcType=VARCHAR},'%'))
			</if>
		order by o.sort,t.sort) u2 
  </select>
</mapper>